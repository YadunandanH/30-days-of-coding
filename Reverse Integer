Given a signed 32-bit integer x, return x with its digits reversed. 
If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21

-------------------------------------Solution------------------------------------
# There are multiple solutions for this
# Following is the pythonic solution

INT_MIN = -2147483647
INT_MAX = 2147483647
class Solution:

    def reverse(self, x: int) -> int:
        # Find sign of the integer
        sign = 1
        if x < 0 :
            sign = -1    
        reversed = (int(str(abs(x))[::-1]))*sign
        if(reversed >= INT_MAX or reversed <= INT_MIN):
            return 0
        return reversed
